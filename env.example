# Plant-AI - Système de Diagnostic Intelligent des Maladies Végétales
# Fichier d'exemple des variables d'environnement
# Copiez ce fichier vers .env et configurez vos valeurs

# =============================================================================
# CONFIGURATION GÉNÉRALE
# =============================================================================

# Environnement d'exécution
PLANT_AI_ENV=development
# Options: development, staging, production

# Niveau de log
PLANT_AI_LOG_LEVEL=INFO
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL

# =============================================================================
# API CONFIGURATION
# =============================================================================

# Host et port de l'API
PLANT_AI_HOST=0.0.0.0
PLANT_AI_PORT=8000

# CORS - Origines autorisées (JSON array)
PLANT_AI_ALLOWED_ORIGINS=["http://localhost:3000", "http://localhost:8080", "https://yourdomain.com"]

# Taille maximale des uploads (en bytes)
PLANT_AI_MAX_UPLOAD_BYTES=20971520
# 20MB par défaut

# =============================================================================
# BASE DE DONNÉES - Configuration base de données
# =============================================================================

# Type de base de données
PLANT_AI_DB_TYPE=sqlite
# Options: sqlite, postgresql

# =============================================================================
# SQLITE - Configuration SQLite (développement)
# =============================================================================

# Chemin vers la base SQLite
PLANT_AI_SQLITE_PATH=./models/plant_ai.db

# =============================================================================
# POSTGRESQL - Configuration PostgreSQL (production)
# =============================================================================

# Host PostgreSQL
PLANT_AI_DB_HOST=localhost
# Pour Docker: postgres

# Port PostgreSQL
PLANT_AI_DB_PORT=5432

# Nom de la base de données
PLANT_AI_DB_NAME=plant_ai

# Utilisateur PostgreSQL
PLANT_AI_DB_USER=plant_ai

# Mot de passe PostgreSQL
PLANT_AI_DB_PASSWORD=your_secure_password_2024

# Pool de connexions
PLANT_AI_DB_POOL_SIZE=10
PLANT_AI_DB_MAX_OVERFLOW=20

# =============================================================================
# MODÈLE YOLO - Configuration du modèle
# =============================================================================

# Chemin vers le modèle YOLO
PLANT_AI_MODEL_PATH=./models/yolov8_best.pt

# Seuil de confiance minimum
PLANT_AI_CONFIDENCE_THRESHOLD=0.5

# Seuil NMS (Non-Maximum Suppression)
PLANT_AI_NMS_THRESHOLD=0.4

# Taille d'image pour l'inférence
PLANT_AI_IMAGE_SIZE=640

# =============================================================================
# SÉCURITÉ - Configuration sécurité
# =============================================================================

# Clé secrète JWT
JWT_SECRET=your_jwt_secret_key_2024_change_this_in_production

# Durée de vie des tokens JWT (en secondes)
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# Clé de chiffrement
ENCRYPTION_KEY=your_encryption_key_32_chars_long

# =============================================================================
# REDIS - Configuration Redis (optionnel)
# =============================================================================

# URL Redis
REDIS_URL=redis://localhost:6379
# Pour Docker: redis://redis:6379

# =============================================================================
# MONITORING - Configuration monitoring
# =============================================================================

# Sentry DSN (optionnel)
SENTRY_DSN=

# Prometheus (optionnel)
PROMETHEUS_ENABLED=false
PROMETHEUS_PORT=9090

# =============================================================================
# DOCKER - Configuration Docker
# =============================================================================

# Image Docker
PLANT_AI_DOCKER_IMAGE=plant-ai:latest

# Tag Docker
PLANT_AI_DOCKER_TAG=latest

# =============================================================================
# DÉVELOPPEMENT - Configuration développement
# =============================================================================

# Mode debug
DEBUG=true

# Rechargement automatique
RELOAD=true

# =============================================================================
# PRODUCTION - Configuration production
# =============================================================================

# Workers Gunicorn
GUNICORN_WORKERS=4

# Timeout Gunicorn
GUNICORN_TIMEOUT=120

# =============================================================================
# NOTIFICATIONS - Configuration notifications (optionnel)
# =============================================================================

# Email SMTP
SMTP_HOST=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=

# Webhook (optionnel)
WEBHOOK_URL=

# =============================================================================
# STORAGE - Configuration stockage (optionnel)
# =============================================================================

# AWS S3 (optionnel)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1
AWS_S3_BUCKET=

# =============================================================================
# ANALYTICS - Configuration analytics (optionnel)
# =============================================================================

# Google Analytics
GOOGLE_ANALYTICS_ID=

# =============================================================================
# EXEMPLES DE CONFIGURATION
# =============================================================================

# Pour le développement local :
# PLANT_AI_ENV=development
# PLANT_AI_DB_TYPE=sqlite
# PLANT_AI_SQLITE_PATH=./models/plant_ai.db

# Pour la production avec PostgreSQL :
# PLANT_AI_ENV=production
# PLANT_AI_DB_TYPE=postgresql
# PLANT_AI_DB_HOST=postgres
# PLANT_AI_DB_PASSWORD=your_secure_password

# Pour Docker Compose :
# PLANT_AI_DB_HOST=postgres
# REDIS_URL=redis://redis:6379

# =============================================================================
# NOTES IMPORTANTES
# =============================================================================

# 1. Ne jamais commiter le fichier .env en production
# 2. Utilisez des mots de passe forts en production
# 3. Changez toutes les clés secrètes par défaut
# 4. Configurez les CORS selon votre domaine
# 5. Ajustez les limites d'upload selon vos besoins
# 6. Configurez le monitoring pour la production
